//
// Far Manager SDK
//
// Copyright (C) 1995-2025, Yegor Mialyk. All Rights Reserved.
//
// Licensed under the MIT License. See the LICENSE file for details.
//

//
// <auto-generated>
//     This code was generated by a tool.
//     Pascal Preprocessor, version 0.08
//
//     Copyright (C) 1995-2025, Yegor Mialyk. All Rights Reserved.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarListUpdateHelper = record helper for FarListUpdate
    procedure Init; inline;
  end;
{$ELSE}
procedure FarListUpdateHelper.Init;
begin
  FillChar(Self, SizeOf(FarListUpdate), 0);
  StructSize := SizeOf(FarListUpdate);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarListInsertHelper = record helper for FarListInsert
    procedure Init; inline;
  end;
{$ELSE}
procedure FarListInsertHelper.Init;
begin
  FillChar(Self, SizeOf(FarListInsert), 0);
  StructSize := SizeOf(FarListInsert);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarListGetItemHelper = record helper for FarListGetItem
    procedure Init; inline;
  end;
{$ELSE}
procedure FarListGetItemHelper.Init;
begin
  FillChar(Self, SizeOf(FarListGetItem), 0);
  StructSize := SizeOf(FarListGetItem);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarListPosHelper = record helper for FarListPos
    procedure Init; inline;
  end;
{$ELSE}
procedure FarListPosHelper.Init;
begin
  FillChar(Self, SizeOf(FarListPos), 0);
  StructSize := SizeOf(FarListPos);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarListFindHelper = record helper for FarListFind
    procedure Init; inline;
  end;
{$ELSE}
procedure FarListFindHelper.Init;
begin
  FillChar(Self, SizeOf(FarListFind), 0);
  StructSize := SizeOf(FarListFind);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarListDeleteHelper = record helper for FarListDelete
    procedure Init; inline;
  end;
{$ELSE}
procedure FarListDeleteHelper.Init;
begin
  FillChar(Self, SizeOf(FarListDelete), 0);
  StructSize := SizeOf(FarListDelete);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarListInfoHelper = record helper for FarListInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure FarListInfoHelper.Init;
begin
  FillChar(Self, SizeOf(FarListInfo), 0);
  StructSize := SizeOf(FarListInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarListItemDataHelper = record helper for FarListItemData
    procedure Init; inline;
  end;
{$ELSE}
procedure FarListItemDataHelper.Init;
begin
  FillChar(Self, SizeOf(FarListItemData), 0);
  StructSize := SizeOf(FarListItemData);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarListHelper = record helper for FarList
    procedure Init; inline;
  end;
{$ELSE}
procedure FarListHelper.Init;
begin
  FillChar(Self, SizeOf(FarList), 0);
  StructSize := SizeOf(FarList);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarListTitlesHelper = record helper for FarListTitles
    procedure Init; inline;
  end;
{$ELSE}
procedure FarListTitlesHelper.Init;
begin
  FillChar(Self, SizeOf(FarListTitles), 0);
  StructSize := SizeOf(FarListTitles);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarDialogItemColorsHelper = record helper for FarDialogItemColors
    procedure Init; inline;
  end;
{$ELSE}
procedure FarDialogItemColorsHelper.Init;
begin
  FillChar(Self, SizeOf(FarDialogItemColors), 0);
  StructSize := SizeOf(FarDialogItemColors);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarDialogItemDataHelper = record helper for FarDialogItemData
    procedure Init; inline;
  end;
{$ELSE}
procedure FarDialogItemDataHelper.Init;
begin
  FillChar(Self, SizeOf(FarDialogItemData), 0);
  StructSize := SizeOf(FarDialogItemData);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarDialogEventHelper = record helper for FarDialogEvent
    procedure Init; inline;
  end;
{$ELSE}
procedure FarDialogEventHelper.Init;
begin
  FillChar(Self, SizeOf(FarDialogEvent), 0);
  StructSize := SizeOf(FarDialogEvent);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  OpenDlgPluginDataHelper = record helper for OpenDlgPluginData
    procedure Init; inline;
  end;
{$ELSE}
procedure OpenDlgPluginDataHelper.Init;
begin
  FillChar(Self, SizeOf(OpenDlgPluginData), 0);
  StructSize := SizeOf(OpenDlgPluginData);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  DialogInfoHelper = record helper for DialogInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure DialogInfoHelper.Init;
begin
  FillChar(Self, SizeOf(DialogInfo), 0);
  StructSize := SizeOf(DialogInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarGetDialogItemHelper = record helper for FarGetDialogItem
    procedure Init; inline;
  end;
{$ELSE}
procedure FarGetDialogItemHelper.Init;
begin
  FillChar(Self, SizeOf(FarGetDialogItem), 0);
  StructSize := SizeOf(FarGetDialogItem);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarPanelItemFreeInfoHelper = record helper for FarPanelItemFreeInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure FarPanelItemFreeInfoHelper.Init;
begin
  FillChar(Self, SizeOf(FarPanelItemFreeInfo), 0);
  StructSize := SizeOf(FarPanelItemFreeInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarGetPluginPanelItemHelper = record helper for FarGetPluginPanelItem
    procedure Init; inline;
  end;
{$ELSE}
procedure FarGetPluginPanelItemHelper.Init;
begin
  FillChar(Self, SizeOf(FarGetPluginPanelItem), 0);
  StructSize := SizeOf(FarGetPluginPanelItem);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  PanelInfoHelper = record helper for PanelInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure PanelInfoHelper.Init;
begin
  FillChar(Self, SizeOf(PanelInfo), 0);
  StructSize := SizeOf(PanelInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  PanelRedrawInfoHelper = record helper for PanelRedrawInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure PanelRedrawInfoHelper.Init;
begin
  FillChar(Self, SizeOf(PanelRedrawInfo), 0);
  StructSize := SizeOf(PanelRedrawInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  CmdLineSelectHelper = record helper for CmdLineSelect
    procedure Init; inline;
  end;
{$ELSE}
procedure CmdLineSelectHelper.Init;
begin
  FillChar(Self, SizeOf(CmdLineSelect), 0);
  StructSize := SizeOf(CmdLineSelect);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarPanelDirectoryHelper = record helper for FarPanelDirectory
    procedure Init; inline;
  end;
{$ELSE}
procedure FarPanelDirectoryHelper.Init;
begin
  FillChar(Self, SizeOf(FarPanelDirectory), 0);
  StructSize := SizeOf(FarPanelDirectory);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  MacroParseResultHelper = record helper for MacroParseResult
    procedure Init; inline;
  end;
{$ELSE}
procedure MacroParseResultHelper.Init;
begin
  FillChar(Self, SizeOf(MacroParseResult), 0);
  StructSize := SizeOf(MacroParseResult);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  MacroSendMacroTextHelper = record helper for MacroSendMacroText
    procedure Init; inline;
  end;
{$ELSE}
procedure MacroSendMacroTextHelper.Init;
begin
  FillChar(Self, SizeOf(MacroSendMacroText), 0);
  StructSize := SizeOf(MacroSendMacroText);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  MacroAddMacroHelper = record helper for MacroAddMacro
    procedure Init; inline;
  end;
{$ELSE}
procedure MacroAddMacroHelper.Init;
begin
  FillChar(Self, SizeOf(MacroAddMacro), 0);
  StructSize := SizeOf(MacroAddMacro);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarMacroCallHelper = record helper for FarMacroCall
    procedure Init; inline;
  end;
{$ELSE}
procedure FarMacroCallHelper.Init;
begin
  FillChar(Self, SizeOf(FarMacroCall), 0);
  StructSize := SizeOf(FarMacroCall);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarGetValueHelper = record helper for FarGetValue
    procedure Init; inline;
  end;
{$ELSE}
procedure FarGetValueHelper.Init;
begin
  FillChar(Self, SizeOf(FarGetValue), 0);
  StructSize := SizeOf(FarGetValue);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  MacroExecuteStringHelper = record helper for MacroExecuteString
    procedure Init; inline;
  end;
{$ELSE}
procedure MacroExecuteStringHelper.Init;
begin
  FillChar(Self, SizeOf(MacroExecuteString), 0);
  StructSize := SizeOf(MacroExecuteString);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarMacroLoadHelper = record helper for FarMacroLoad
    procedure Init; inline;
  end;
{$ELSE}
procedure FarMacroLoadHelper.Init;
begin
  FillChar(Self, SizeOf(FarMacroLoad), 0);
  StructSize := SizeOf(FarMacroLoad);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarSetColorsHelper = record helper for FarSetColors
    procedure Init; inline;
  end;
{$ELSE}
procedure FarSetColorsHelper.Init;
begin
  FillChar(Self, SizeOf(FarSetColors), 0);
  StructSize := SizeOf(FarSetColors);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  WindowInfoHelper = record helper for WindowInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure WindowInfoHelper.Init;
begin
  FillChar(Self, SizeOf(WindowInfo), 0);
  StructSize := SizeOf(WindowInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  WindowTypeHelper = record helper for WindowType
    procedure Init; inline;
  end;
{$ELSE}
procedure WindowTypeHelper.Init;
begin
  FillChar(Self, SizeOf(WindowType), 0);
  StructSize := SizeOf(WindowType);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  ProgressValueHelper = record helper for ProgressValue
    procedure Init; inline;
  end;
{$ELSE}
procedure ProgressValueHelper.Init;
begin
  FillChar(Self, SizeOf(ProgressValue), 0);
  StructSize := SizeOf(ProgressValue);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  ViewerSetModeHelper = record helper for ViewerSetMode
    procedure Init; inline;
  end;
{$ELSE}
procedure ViewerSetModeHelper.Init;
begin
  FillChar(Self, SizeOf(ViewerSetMode), 0);
  StructSize := SizeOf(ViewerSetMode);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  ViewerSelectHelper = record helper for ViewerSelect
    procedure Init; inline;
  end;
{$ELSE}
procedure ViewerSelectHelper.Init;
begin
  FillChar(Self, SizeOf(ViewerSelect), 0);
  StructSize := SizeOf(ViewerSelect);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  ViewerSetPositionHelper = record helper for ViewerSetPosition
    procedure Init; inline;
  end;
{$ELSE}
procedure ViewerSetPositionHelper.Init;
begin
  FillChar(Self, SizeOf(ViewerSetPosition), 0);
  StructSize := SizeOf(ViewerSetPosition);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  ViewerInfoHelper = record helper for ViewerInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure ViewerInfoHelper.Init;
begin
  FillChar(Self, SizeOf(ViewerInfo), 0);
  StructSize := SizeOf(ViewerInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  EditorSetParameterHelper = record helper for EditorSetParameter
    procedure Init; inline;
  end;
{$ELSE}
procedure EditorSetParameterHelper.Init;
begin
  FillChar(Self, SizeOf(EditorSetParameter), 0);
  StructSize := SizeOf(EditorSetParameter);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  EditorUndoRedoHelper = record helper for EditorUndoRedo
    procedure Init; inline;
  end;
{$ELSE}
procedure EditorUndoRedoHelper.Init;
begin
  FillChar(Self, SizeOf(EditorUndoRedo), 0);
  StructSize := SizeOf(EditorUndoRedo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  EditorGetStringHelper = record helper for EditorGetString
    procedure Init; inline;
  end;
{$ELSE}
procedure EditorGetStringHelper.Init;
begin
  FillChar(Self, SizeOf(EditorGetString), 0);
  StructSize := SizeOf(EditorGetString);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  EditorSetStringHelper = record helper for EditorSetString
    procedure Init; inline;
  end;
{$ELSE}
procedure EditorSetStringHelper.Init;
begin
  FillChar(Self, SizeOf(EditorSetString), 0);
  StructSize := SizeOf(EditorSetString);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  EditorInfoHelper = record helper for EditorInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure EditorInfoHelper.Init;
begin
  FillChar(Self, SizeOf(EditorInfo), 0);
  StructSize := SizeOf(EditorInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  EditorBookmarksHelper = record helper for EditorBookmarks
    procedure Init; inline;
  end;
{$ELSE}
procedure EditorBookmarksHelper.Init;
begin
  FillChar(Self, SizeOf(EditorBookmarks), 0);
  StructSize := SizeOf(EditorBookmarks);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  EditorSetPositionHelper = record helper for EditorSetPosition
    procedure Init; inline;
  end;
{$ELSE}
procedure EditorSetPositionHelper.Init;
begin
  FillChar(Self, SizeOf(EditorSetPosition), 0);
  StructSize := SizeOf(EditorSetPosition);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  EditorSelectHelper = record helper for EditorSelect
    procedure Init; inline;
  end;
{$ELSE}
procedure EditorSelectHelper.Init;
begin
  FillChar(Self, SizeOf(EditorSelect), 0);
  StructSize := SizeOf(EditorSelect);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  EditorConvertPosHelper = record helper for EditorConvertPos
    procedure Init; inline;
  end;
{$ELSE}
procedure EditorConvertPosHelper.Init;
begin
  FillChar(Self, SizeOf(EditorConvertPos), 0);
  StructSize := SizeOf(EditorConvertPos);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  EditorColorHelper = record helper for EditorColor
    procedure Init; inline;
  end;
{$ELSE}
procedure EditorColorHelper.Init;
begin
  FillChar(Self, SizeOf(EditorColor), 0);
  StructSize := SizeOf(EditorColor);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  EditorDeleteColorHelper = record helper for EditorDeleteColor
    procedure Init; inline;
  end;
{$ELSE}
procedure EditorDeleteColorHelper.Init;
begin
  FillChar(Self, SizeOf(EditorDeleteColor), 0);
  StructSize := SizeOf(EditorDeleteColor);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  EditorSaveFileHelper = record helper for EditorSaveFile
    procedure Init; inline;
  end;
{$ELSE}
procedure EditorSaveFileHelper.Init;
begin
  FillChar(Self, SizeOf(EditorSaveFile), 0);
  StructSize := SizeOf(EditorSaveFile);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  EditorChangeHelper = record helper for EditorChange
    procedure Init; inline;
  end;
{$ELSE}
procedure EditorChangeHelper.Init;
begin
  FillChar(Self, SizeOf(EditorChange), 0);
  StructSize := SizeOf(EditorChange);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  EditorSubscribeChangeEventHelper = record helper for EditorSubscribeChangeEvent
    procedure Init; inline;
  end;
{$ELSE}
procedure EditorSubscribeChangeEventHelper.Init;
begin
  FillChar(Self, SizeOf(EditorSubscribeChangeEvent), 0);
  StructSize := SizeOf(EditorSubscribeChangeEvent);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarSettingsCreateHelper = record helper for FarSettingsCreate
    procedure Init; inline;
  end;
{$ELSE}
procedure FarSettingsCreateHelper.Init;
begin
  FillChar(Self, SizeOf(FarSettingsCreate), 0);
  StructSize := SizeOf(FarSettingsCreate);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarSettingsItemHelper = record helper for FarSettingsItem
    procedure Init; inline;
  end;
{$ELSE}
procedure FarSettingsItemHelper.Init;
begin
  FillChar(Self, SizeOf(FarSettingsItem), 0);
  StructSize := SizeOf(FarSettingsItem);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarSettingsEnumHelper = record helper for FarSettingsEnum
    procedure Init; inline;
  end;
{$ELSE}
procedure FarSettingsEnumHelper.Init;
begin
  FillChar(Self, SizeOf(FarSettingsEnum), 0);
  StructSize := SizeOf(FarSettingsEnum);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarSettingsValueHelper = record helper for FarSettingsValue
    procedure Init; inline;
  end;
{$ELSE}
procedure FarSettingsValueHelper.Init;
begin
  FillChar(Self, SizeOf(FarSettingsValue), 0);
  StructSize := SizeOf(FarSettingsValue);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarStandardFunctionsHelper = record helper for FarStandardFunctions
    procedure Init; inline;
  end;
{$ELSE}
procedure FarStandardFunctionsHelper.Init;
begin
  FillChar(Self, SizeOf(FarStandardFunctions), 0);
  StructSize := SizeOf(FarStandardFunctions);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  PluginStartupInfoHelper = record helper for PluginStartupInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure PluginStartupInfoHelper.Init;
begin
  FillChar(Self, SizeOf(PluginStartupInfo), 0);
  StructSize := SizeOf(PluginStartupInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  ArclitePrivateInfoHelper = record helper for ArclitePrivateInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure ArclitePrivateInfoHelper.Init;
begin
  FillChar(Self, SizeOf(ArclitePrivateInfo), 0);
  StructSize := SizeOf(ArclitePrivateInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  NetBoxPrivateInfoHelper = record helper for NetBoxPrivateInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure NetBoxPrivateInfoHelper.Init;
begin
  FillChar(Self, SizeOf(NetBoxPrivateInfo), 0);
  StructSize := SizeOf(NetBoxPrivateInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  MacroPrivateInfoHelper = record helper for MacroPrivateInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure MacroPrivateInfoHelper.Init;
begin
  FillChar(Self, SizeOf(MacroPrivateInfo), 0);
  StructSize := SizeOf(MacroPrivateInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  GlobalInfoHelper = record helper for GlobalInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure GlobalInfoHelper.Init;
begin
  FillChar(Self, SizeOf(GlobalInfo), 0);
  StructSize := SizeOf(GlobalInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  PluginInfoHelper = record helper for PluginInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure PluginInfoHelper.Init;
begin
  FillChar(Self, SizeOf(PluginInfo), 0);
  StructSize := SizeOf(PluginInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarGetPluginInformationHelper = record helper for FarGetPluginInformation
    procedure Init; inline;
  end;
{$ELSE}
procedure FarGetPluginInformationHelper.Init;
begin
  FillChar(Self, SizeOf(FarGetPluginInformation), 0);
  StructSize := SizeOf(FarGetPluginInformation);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FarSetKeyBarTitlesHelper = record helper for FarSetKeyBarTitles
    procedure Init; inline;
  end;
{$ELSE}
procedure FarSetKeyBarTitlesHelper.Init;
begin
  FillChar(Self, SizeOf(FarSetKeyBarTitles), 0);
  StructSize := SizeOf(FarSetKeyBarTitles);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  OpenPanelInfoHelper = record helper for OpenPanelInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure OpenPanelInfoHelper.Init;
begin
  FillChar(Self, SizeOf(OpenPanelInfo), 0);
  StructSize := SizeOf(OpenPanelInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  AnalyseInfoHelper = record helper for AnalyseInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure AnalyseInfoHelper.Init;
begin
  FillChar(Self, SizeOf(AnalyseInfo), 0);
  StructSize := SizeOf(AnalyseInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  OpenAnalyseInfoHelper = record helper for OpenAnalyseInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure OpenAnalyseInfoHelper.Init;
begin
  FillChar(Self, SizeOf(OpenAnalyseInfo), 0);
  StructSize := SizeOf(OpenAnalyseInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  OpenMacroInfoHelper = record helper for OpenMacroInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure OpenMacroInfoHelper.Init;
begin
  FillChar(Self, SizeOf(OpenMacroInfo), 0);
  StructSize := SizeOf(OpenMacroInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  OpenShortcutInfoHelper = record helper for OpenShortcutInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure OpenShortcutInfoHelper.Init;
begin
  FillChar(Self, SizeOf(OpenShortcutInfo), 0);
  StructSize := SizeOf(OpenShortcutInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  OpenCommandLineInfoHelper = record helper for OpenCommandLineInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure OpenCommandLineInfoHelper.Init;
begin
  FillChar(Self, SizeOf(OpenCommandLineInfo), 0);
  StructSize := SizeOf(OpenCommandLineInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  OpenInfoHelper = record helper for OpenInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure OpenInfoHelper.Init;
begin
  FillChar(Self, SizeOf(OpenInfo), 0);
  StructSize := SizeOf(OpenInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  SetDirectoryInfoHelper = record helper for SetDirectoryInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure SetDirectoryInfoHelper.Init;
begin
  FillChar(Self, SizeOf(SetDirectoryInfo), 0);
  StructSize := SizeOf(SetDirectoryInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  SetFindListInfoHelper = record helper for SetFindListInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure SetFindListInfoHelper.Init;
begin
  FillChar(Self, SizeOf(SetFindListInfo), 0);
  StructSize := SizeOf(SetFindListInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  PutFilesInfoHelper = record helper for PutFilesInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure PutFilesInfoHelper.Init;
begin
  FillChar(Self, SizeOf(PutFilesInfo), 0);
  StructSize := SizeOf(PutFilesInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  ProcessHostFileInfoHelper = record helper for ProcessHostFileInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure ProcessHostFileInfoHelper.Init;
begin
  FillChar(Self, SizeOf(ProcessHostFileInfo), 0);
  StructSize := SizeOf(ProcessHostFileInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  MakeDirectoryInfoHelper = record helper for MakeDirectoryInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure MakeDirectoryInfoHelper.Init;
begin
  FillChar(Self, SizeOf(MakeDirectoryInfo), 0);
  StructSize := SizeOf(MakeDirectoryInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  CompareInfoHelper = record helper for CompareInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure CompareInfoHelper.Init;
begin
  FillChar(Self, SizeOf(CompareInfo), 0);
  StructSize := SizeOf(CompareInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  GetFindDataInfoHelper = record helper for GetFindDataInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure GetFindDataInfoHelper.Init;
begin
  FillChar(Self, SizeOf(GetFindDataInfo), 0);
  StructSize := SizeOf(GetFindDataInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  FreeFindDataInfoHelper = record helper for FreeFindDataInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure FreeFindDataInfoHelper.Init;
begin
  FillChar(Self, SizeOf(FreeFindDataInfo), 0);
  StructSize := SizeOf(FreeFindDataInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  GetFilesInfoHelper = record helper for GetFilesInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure GetFilesInfoHelper.Init;
begin
  FillChar(Self, SizeOf(GetFilesInfo), 0);
  StructSize := SizeOf(GetFilesInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  DeleteFilesInfoHelper = record helper for DeleteFilesInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure DeleteFilesInfoHelper.Init;
begin
  FillChar(Self, SizeOf(DeleteFilesInfo), 0);
  StructSize := SizeOf(DeleteFilesInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  ProcessPanelInputInfoHelper = record helper for ProcessPanelInputInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure ProcessPanelInputInfoHelper.Init;
begin
  FillChar(Self, SizeOf(ProcessPanelInputInfo), 0);
  StructSize := SizeOf(ProcessPanelInputInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  ProcessEditorInputInfoHelper = record helper for ProcessEditorInputInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure ProcessEditorInputInfoHelper.Init;
begin
  FillChar(Self, SizeOf(ProcessEditorInputInfo), 0);
  StructSize := SizeOf(ProcessEditorInputInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  ProcessConsoleInputInfoHelper = record helper for ProcessConsoleInputInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure ProcessConsoleInputInfoHelper.Init;
begin
  FillChar(Self, SizeOf(ProcessConsoleInputInfo), 0);
  StructSize := SizeOf(ProcessConsoleInputInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  ExitInfoHelper = record helper for ExitInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure ExitInfoHelper.Init;
begin
  FillChar(Self, SizeOf(ExitInfo), 0);
  StructSize := SizeOf(ExitInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  ProcessPanelEventInfoHelper = record helper for ProcessPanelEventInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure ProcessPanelEventInfoHelper.Init;
begin
  FillChar(Self, SizeOf(ProcessPanelEventInfo), 0);
  StructSize := SizeOf(ProcessPanelEventInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  ProcessEditorEventInfoHelper = record helper for ProcessEditorEventInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure ProcessEditorEventInfoHelper.Init;
begin
  FillChar(Self, SizeOf(ProcessEditorEventInfo), 0);
  StructSize := SizeOf(ProcessEditorEventInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  ProcessDialogEventInfoHelper = record helper for ProcessDialogEventInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure ProcessDialogEventInfoHelper.Init;
begin
  FillChar(Self, SizeOf(ProcessDialogEventInfo), 0);
  StructSize := SizeOf(ProcessDialogEventInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  ProcessSynchroEventInfoHelper = record helper for ProcessSynchroEventInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure ProcessSynchroEventInfoHelper.Init;
begin
  FillChar(Self, SizeOf(ProcessSynchroEventInfo), 0);
  StructSize := SizeOf(ProcessSynchroEventInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  ProcessViewerEventInfoHelper = record helper for ProcessViewerEventInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure ProcessViewerEventInfoHelper.Init;
begin
  FillChar(Self, SizeOf(ProcessViewerEventInfo), 0);
  StructSize := SizeOf(ProcessViewerEventInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  ClosePanelInfoHelper = record helper for ClosePanelInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure ClosePanelInfoHelper.Init;
begin
  FillChar(Self, SizeOf(ClosePanelInfo), 0);
  StructSize := SizeOf(ClosePanelInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  CloseAnalyseInfoHelper = record helper for CloseAnalyseInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure CloseAnalyseInfoHelper.Init;
begin
  FillChar(Self, SizeOf(CloseAnalyseInfo), 0);
  StructSize := SizeOf(CloseAnalyseInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  ConfigureInfoHelper = record helper for ConfigureInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure ConfigureInfoHelper.Init;
begin
  FillChar(Self, SizeOf(ConfigureInfo), 0);
  StructSize := SizeOf(ConfigureInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  GetContentFieldsInfoHelper = record helper for GetContentFieldsInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure GetContentFieldsInfoHelper.Init;
begin
  FillChar(Self, SizeOf(GetContentFieldsInfo), 0);
  StructSize := SizeOf(GetContentFieldsInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  GetContentDataInfoHelper = record helper for GetContentDataInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure GetContentDataInfoHelper.Init;
begin
  FillChar(Self, SizeOf(GetContentDataInfo), 0);
  StructSize := SizeOf(GetContentDataInfo);
end;
{$ENDIF}

{$IFNDEF _FAR_IMPLEMENTATION_}
type
  ErrorInfoHelper = record helper for ErrorInfo
    procedure Init; inline;
  end;
{$ELSE}
procedure ErrorInfoHelper.Init;
begin
  FillChar(Self, SizeOf(ErrorInfo), 0);
  StructSize := SizeOf(ErrorInfo);
end;
{$ENDIF}

